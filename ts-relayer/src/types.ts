import { ChainConfig } from './config/types';

/**
 * Metadata about an event that was emitted on the source chain
 */
export interface EventMeta {
  /** Transaction hash */
  txHash?: string;
  /** Block number */
  blockNumber: number;
  /** Transaction index in the block */
  txIndex: number;
  /** Log index in the transaction */
  logIndex: number;
}

/**
 * Event detected by the event generator
 */
export interface RelayEvent {
  /** Source chain configuration */
  sourceChain: ChainConfig;
  /** Source resolver contract address */
  sourceResolverAddress: string;
  /** Destination chain configuration */
  destinationChain: ChainConfig;
  /** Destination dapp address */
  destDappAddress: string;
  /** ABI-encoded execution payload */
  execPayload: string;
  /** Nonce for the cross-chain request */
  nonce: string;
  /** Metadata about the event */
  meta: EventMeta;
}

/**
 * Delivery request sent to the event deliverer
 */
export interface DeliveryRequest {
  /** Destination chain ID */
  destinationChainId: number;
  /** Destination contract address */
  destinationContractAddress: string;
  /** Original relay event */
  event: RelayEvent;
  /** Proof generated by the proof fetcher */
  proof: string;
}
